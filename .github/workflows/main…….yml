name: Create Windows 11 VM with 56 CPU cores, 2TB SSD, 3D GPU and Tailscale VPN

on:
  workflow_dispatch:
    inputs:
      tailscale_auth_key:
        description: 'Tailscale auth key'
        required: true

jobs:
  create_vm:
    runs-on: ubuntu-latest

    steps:
      - name: Create VM Request and Check Response
        id: create_vm
        run: |
          http_status=$(curl -s -o response.json -w "%{http_code}" -X POST https://api.examplecloud.com/v1/vms/create \
            -H "Content-Type: application/json" \
            -d '{
              "os": "windows-11",
              "cpu_cores": 56,
              "ram_gb": 128,
              "storage_gb": 2048,
              "gpu": "virtio-3d",
              "rdp_enabled": true
            }')

          echo "HTTP status: $http_status"
          if [ "$http_status" != "200" ]; then
            echo "Error: API responded with status $http_status"
            echo "Response content:"
            cat response.json
            exit 1
          fi

          vm_id=$(jq -r '.id' response.json)
          vm_ip=$(jq -r '.ip' response.json)
          username=$(jq -r '.username' response.json)
          password=$(jq -r '.password' response.json)

          echo "vm_id=$vm_id" >> $GITHUB_OUTPUT
          echo "vm_ip=$vm_ip" >> $GITHUB_OUTPUT
          echo "username=$username" >> $GITHUB_OUTPUT
          echo "password=$password" >> $GITHUB_OUTPUT

      - name: Wait for VM to boot
        run: sleep 300

      - name: Configure Tailscale VPN and RDP
        env:
          VM_IP: ${{ steps.create_vm.outputs.vm_ip }}
          VM_USER: ${{ steps.create_vm.outputs.username }}
          VM_PASS: ${{ steps.create_vm.outputs.password }}
          TAILSCALE_AUTH_KEY: ${{ github.event.inputs.tailscale_auth_key }}
        run: |
          pwsh -Command "
          \$secpasswd = ConvertTo-SecureString \$env:VM_PASS -AsPlainText -Force
          \$cred = New-Object System.Management.Automation.PSCredential (\$env:VM_USER, \$secpasswd)
          Invoke-Command -ComputerName \$env:VM_IP -Credential \$cred -ScriptBlock {
            Invoke-WebRequest -Uri https://tailscale.com/install.ps1 -OutFile install_tailscale.ps1
            & ./install_tailscale.ps1
            Start-Process 'tailscale.exe' -ArgumentList \"up --auth-key $using:TAILSCALE_AUTH_KEY --accept-routes --accept-dns\" -NoNewWindow -Wait
            Set-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server' -Name 'fDenyTSConnections' -Value 0
            Enable-NetFirewallRule -DisplayGroup 'Remote Desktop'
          }"

      - name: Run VM 30 minutes (can be changed)
        run: sleep 1800

      - name: Stop VM (customize command)
        run: echo "Stopping VM ${{ steps.create_vm.outputs.vm_id }}"

      - name: Output VM access info
        run: |
          echo "VM IP: ${{ steps.create_vm.outputs.vm_ip }}"
          echo "Username: ${{ steps.create_vm.outputs.username }}"
          echo "Password: ${{ steps.create_vm.outputs.password }}"
